{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\ramp-fe-challenge\\\\src\\\\components\\\\Transactions\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const opts = {\n    length: 38,\n    width: 17,\n    radius: 45,\n    scale: 1,\n    corners: 1,\n    speed: 1,\n    rotate: 0,\n    animation: 'spinner-line-fade-quick',\n    direction: 1,\n    color: '#ffffff',\n    fadeColor: 'transparent',\n    top: '50%',\n    left: '50%',\n    shadow: '0 0 1px transparent',\n    zIndex: 2000000000,\n    className: 'spinner',\n    position: 'absolute'\n  }; // const spinner = new Spinner(opts).spin(RampLoading--container.current);\n\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loading,\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"3TeCR/OJhEdaHp00JQf6jBdD3oc=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","opts","length","width","radius","scale","corners","speed","rotate","animation","direction","color","fadeColor","top","left","shadow","zIndex","className","position","setTransactionApproval","transactionId","newValue","value","map","transaction","id"],"sources":["C:/Users/User/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useEffec } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\nimport {Spinner} from 'spin.js';\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch();\n\n  const opts = {\n    length: 38,\n    width: 17, \n    radius: 45, \n    scale: 1, \n    corners: 1, \n    speed: 1,\n    rotate: 0,\n    animation: 'spinner-line-fade-quick', \n    direction: 1, \n    color: '#ffffff',\n    fadeColor: 'transparent', \n    top: '50%', \n    left: '50%', \n    shadow: '0 0 1px transparent', \n    zIndex: 2000000000, \n    className: 'spinner', \n    position: 'absolute', \n  };\n\n  // const spinner = new Spinner(opts).spin(RampLoading--container.current);\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div ref={loading} className=\"RampLoading--container\">Loading...</div>\n  }\n\n\n  return (\n    <div className=\"transaction-container\" data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAIA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EAEA,MAAMM,IAAI,GAAG;IACXC,MAAM,EAAE,EADG;IAEXC,KAAK,EAAE,EAFI;IAGXC,MAAM,EAAE,EAHG;IAIXC,KAAK,EAAE,CAJI;IAKXC,OAAO,EAAE,CALE;IAMXC,KAAK,EAAE,CANI;IAOXC,MAAM,EAAE,CAPG;IAQXC,SAAS,EAAE,yBARA;IASXC,SAAS,EAAE,CATA;IAUXC,KAAK,EAAE,SAVI;IAWXC,SAAS,EAAE,aAXA;IAYXC,GAAG,EAAE,KAZM;IAaXC,IAAI,EAAE,KAbK;IAcXC,MAAM,EAAE,qBAdG;IAeXC,MAAM,EAAE,UAfG;IAgBXC,SAAS,EAAE,SAhBA;IAiBXC,QAAQ,EAAE;EAjBC,CAAb,CAHuE,CAuBvE;;EAEA,MAAMC,sBAAsB,GAAGzB,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAE0B,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMtB,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFqB,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB;EAID,CANuC,EAOxC,CAACtB,iBAAD,CAPwC,CAA1C;;EAUA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,GAAG,EAAEE,OAAV;MAAmB,SAAS,EAAC,wBAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAGD,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAuC,eAAY,uBAAnD;IAAA,UACGF,YAAY,CAACyB,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAExB,OAHX;MAIE,sBAAsB,EAAEmB;IAJ1B,GACOK,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CApDM;;GAAM5B,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}